{"version":3,"sources":["constants/index.js","actions/index.js","components/ContentEditableInput.js","components/CategoryChanger.js","containers/CategoryChangerContainer.js","components/Task.js","containers/TaskContainer.js","components/Category.js","containers/CategoryContainer.js","containers/App.js","serviceWorker.js","reducers/tasks.js","reducers/categories.js","reducers/index.js","index.js"],"names":["tasksConstants","actions","createTask","payload","type","updateTask","removeTask","changeTaskCategory","task","category","ContentEditableInput","emitChange","html","ReactDOM","findDOMNode","innerHTML","props","onBlur","lastHtml","target","index","name","value","nextProps","this","className","data-text","placeholder","contentEditable","dangerouslySetInnerHTML","__html","Component","onMouseOver","onMouseOut","categories","handleChangeCategory","style","map","key","id","onClick","title","CategoryChangerContainer","state","display","changeTaskCategoryHandler","e","toString","onMouseOverHandler","setState","onMouseOutHandler","filteredCategories","items","filter","CategoryChanger","connect","Task","handleChange","handleBlur","tasks","children","desc","TaskContainer","removeTaskHandler","updateTaskHandler","item","length","opacity","Category","sortTask","sorting","slug","sortItemsByTitle","sort","a","b","valA","toLowerCase","valB","CategoryContainer","prevProps","componentDidMount","itemsFiltered","createTaskHandler","sortTaskHandler","newSorting","sortedItems","render","getDerivedStateFromProps","App","React","Boolean","window","location","hostname","match","initialState","rootReducer","combineReducers","action","loggerMiddleware","createLogger","store","createStore","applyMiddleware","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.99f8f7c8.chunk.js","sourcesContent":["export const tasksConstants = {\r\n\tTASK_CREATE: 'TASK_CREATE',\r\n\tTASK_DELETE: 'TASK_DELETE',\r\n\tTASK_UPDATE: 'TASK_UPDATE',\r\n\tTASK_CHANGE_TYPE: 'TASK_CHANGE_TYPE'\r\n};","import { tasksConstants } from '../constants';\r\n\r\n//let counter = 1;\r\n\r\nconst createTask = payload => {\r\n\t//const id = (counter++).toString();\r\n\treturn {\r\n\t\ttype: tasksConstants.TASK_CREATE,\r\n\t\t//payload: { id: id, category: payload }\r\n\t\tpayload\r\n\t};\r\n};\r\n\r\nconst updateTask = payload => {\r\n\treturn {\r\n\t\ttype: tasksConstants.TASK_UPDATE,\r\n\t\tpayload\r\n\t};\r\n};\r\n\r\nconst removeTask = payload => {\r\n\treturn {\r\n\t\ttype: tasksConstants.TASK_DELETE,\r\n\t\tpayload\r\n\t};\r\n};\r\n\r\nconst changeTaskCategory = (task, category) => {\r\n\treturn {\r\n\t\ttype: tasksConstants.TASK_CHANGE_TYPE,\r\n\t\tpayload: { task, category }\r\n\t};\r\n};\r\n\r\nexport const actions = {\r\n\tcreateTask,\r\n\tupdateTask,\r\n\tremoveTask,\r\n\tchangeTaskCategory\r\n};","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass ContentEditableInput extends Component {\t\r\n    shouldComponentUpdate(nextProps) {\r\n        return nextProps.html !== ReactDOM.findDOMNode(this).innerHTML;\r\n    }\r\n\t\r\n    emitChange = () => {\r\n        let html = ReactDOM.findDOMNode(this).innerHTML;\r\n        if (this.props.onBlur && html !== this.lastHtml) {\r\n\r\n            this.props.onBlur({\r\n                target: {\r\n\t\t\t\t\tindex: this.props.index,\r\n\t\t\t\t\tname: this.props.name,\r\n                    value: html\r\n                }\r\n            });\r\n        }\r\n        this.lastHtml = html;\r\n    }\r\n\t\r\n\trender() {\r\n        return (\r\n\t\t\t<div \r\n\t\t\t\tindex={this.props.index}\r\n\t\t\t\tname={this.props.name}\r\n\t\t\t\tclassName={this.props.className}\r\n\t\t\t\tdata-text={this.props.placeholder}\r\n\t\t\t\t//onInput={this.emitChange} \r\n\t\t\t\tonBlur={this.emitChange}\r\n\t\t\t\tcontentEditable\r\n\t\t\t\tdangerouslySetInnerHTML={{__html: this.props.html}}\r\n\t\t\t>\r\n\t\t\t</div>\r\n\t\t);\r\n    }\r\n};\r\n\r\nexport default ContentEditableInput;","import React from 'react';\r\n\r\nexport default ({ onMouseOver, onMouseOut, categories, handleChangeCategory, style }) => (\r\n\t<span className=\"task-move\" onMouseOver={onMouseOver} onMouseOut={onMouseOut}>\r\n\t\t<span>Переместить v</span>\r\n\t\t<ul className=\"task-move-drop\" style={style}>\r\n\t\t\t{categories.map((category, index) => (\r\n\t\t\t\t<li key={index} value={category.id} onClick={handleChangeCategory}>{category.title}</li>\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t</span>\r\n);","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from 'react-redux';\r\nimport { actions } from '../actions';\r\nimport CategoryChanger from '../components/CategoryChanger';\r\n\r\nclass CategoryChangerContainer extends Component {\t\r\n\r\n\tstate = {\r\n\t\tstyle: {\r\n\t\t\tdisplay: 'none'\r\n\t\t}\r\n\t};\r\n\t\r\n\tchangeTaskCategoryHandler = e => {\r\n\t\tconst { changeTaskCategory, task } = this.props;\r\n\t\tchangeTaskCategory(task, e.target.value.toString());\r\n\t};\r\n\t\r\n\tonMouseOverHandler = e => {\r\n\t\tthis.setState({ style: { display: 'block' } });\r\n\t};\r\n\t\r\n\tonMouseOutHandler = e => {\r\n\t\tthis.setState({ style: { display: 'none' } });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst filteredCategories = this.props.categories.items.filter(category => category.id !== this.props.task.category);\r\n\t\treturn (\r\n\t\t\t<CategoryChanger\r\n\t\t\t\tcategories={filteredCategories}\r\n\t\t\t\tstyle={this.state.style}\r\n\t\t\t\tonMouseOver={this.onMouseOverHandler}\r\n\t\t\t\tonMouseOut={this.onMouseOutHandler}\r\n\t\t\t\thandleChangeCategory={this.changeTaskCategoryHandler}\r\n\t\t\t/>\r\n\t\t) ;\r\n\t};\r\n};\r\n\r\nexport default connect(\r\n\tstate => ({ categories: state.categories }),\r\n\t{ \r\n\t\tchangeTaskCategory: actions.changeTaskCategory \r\n\t}\r\n)(CategoryChangerContainer);\r\n\r\nCategoryChangerContainer.propTypes = {\r\n\tcategories: PropTypes.object,\r\n\tchangeTaskCategoryHandler: PropTypes.func,\r\n\tonMouseOverHandler: PropTypes.func,\r\n\tonMouseOutHandler: PropTypes.func,\r\n\tchangeTaskCategory: PropTypes.func.isRequired\r\n};","import React from 'react';\r\nimport ContentEditableInput from './ContentEditableInput';\r\nimport CategoryChangerContainer from '../containers/CategoryChangerContainer';\r\n\r\nconst Task = ({ handleChange, handleBlur, removeTask, tasks, children }) => {\r\n\treturn (\r\n\t\t<div className=\"board\">\r\n\t\t\t{tasks.items.map(task =>\r\n\t\t\t\t<task key={task.id}>\r\n\t\t\t\t\t<ContentEditableInput index={task.id} name=\"title\" className=\"task-name\" html={task.title} onBlur={handleBlur} placeholder=\"Название задачи\" />\r\n\t\t\t\t\t<ContentEditableInput index={task.id} name=\"desc\" className=\"task-description\" html={task.desc} onBlur={handleBlur} placeholder=\"Описание задачи\" />\r\n\t\t\t\t\t<div className=\"task-options\">\r\n\t\t\t\t\t\t<span className=\"task-delete\" onClick={() => removeTask(task.id)}>Удалить</span>\r\n\t\t\t\t\t\t\t<CategoryChangerContainer\r\n\t\t\t\t\t\t\t\ttask={task}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</task>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Task;","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from 'react-redux';\r\nimport { actions } from '../actions';\r\nimport Task from '../components/Task';\r\n\r\nclass TaskContainer extends Component {\t\r\n\t\r\n\tremoveTaskHandler = id => this.props.removeTask(id);\r\n\t\r\n\tupdateTaskHandler = e => {\r\n\t\tconst { updateTask, tasks } = this.props;\r\n\t\tconst items = tasks.items.filter(item => item.id === e.target.index);\r\n\t\tconst updatedItem = {...items[0], [e.target.name]: e.target.value};\r\n\t\tupdateTask(updatedItem);\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn this.props.tasks.items.length ? (\r\n\t\t\t<Task\r\n\t\t\t\ttasks={this.props.tasks}\r\n\t\t\t\tremoveTask={this.removeTaskHandler}\r\n\t\t\t\thandleBlur={this.updateTaskHandler}\r\n\t\t\t/>\r\n\t\t) : ( <span style={{opacity: \".1\"}}>Пусто</span> )\r\n\t};\r\n};\r\n\r\nexport default connect(\r\n\tnull,\r\n\t{ \r\n\t\tremoveTask: actions.removeTask, \r\n\t\tupdateTask: actions.updateTask \r\n\t}\r\n)(TaskContainer);\r\n\r\nTaskContainer.propTypes = {\r\n\tremoveTaskHandler: PropTypes.func,\r\n\tupdateTaskHandler: PropTypes.func,\r\n\tremoveTask: PropTypes.func.isRequired,\r\n\tupdateTask: PropTypes.func.isRequired\r\n};","import React from 'react'\r\n\r\nconst Category = ({ createTask, sortTask, category, sorting, children }) => (\r\n\t<div className={\"column \" + category.slug}>\r\n\t\t<div className=\"name\">\r\n\t\t\t<span className=\"name-common\">{category.title}</span>\r\n\t\t\t<span className=\"name-sort\" onClick={sortTask}>sort {sorting !== 1 ? '(A-я)' : '(Я-а)'}</span>\r\n\t\t</div>\r\n\t\t<div className=\"add-task\"> \r\n\t\t\t<span className=\"add-task-text\" onClick={createTask}>Добавить задачу</span> \r\n\t\t</div>\r\n\t\t\t<div className=\"board\">\r\n\t\t\t\t{children}\r\n\t\t\t</div>\r\n\t</div>\r\n);\r\n\r\nexport default Category;","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from 'react-redux';\r\nimport { actions } from '../actions';\r\nimport TaskContainer from '../containers/TaskContainer';\r\nimport Category from '../components/Category';\r\n\r\nconst sortItemsByTitle = (items, type) => {\r\n\titems.sort((a, b) => {\r\n\t\tlet valA = a.title.toLowerCase(), valB = b.title.toLowerCase();\r\n\t\treturn valA < valB ? type : valA > valB ? type * -1 : 0;\r\n\t});\r\n\treturn items;\r\n};\r\n\r\nclass CategoryContainer extends Component {\t\r\n\r\n\tstate = {\r\n\t\tsorting: 0,\r\n\t\ttasks: { items: []},\r\n\t\tprevProps: {}\r\n\t};\r\n\t\r\n\tstatic getDerivedStateFromProps = (props, state) => {\r\n\t\tconst { prevProps } = state;\r\n\r\n\t\tif(prevProps.tasks !== props.tasks){\r\n\t\t\tconst itemsFiltered = props.tasks.items.filter(item => item.category === props.category.id);\r\n\t\t\treturn {\r\n\t\t\t\ttasks: {\r\n\t\t\t\t\titems: state.sorting === 0 ? itemsFiltered : sortItemsByTitle(itemsFiltered, state.sorting)\r\n\t\t\t\t},\r\n\t\t\t\tprevProps: props\r\n\t\t\t};\r\n\t\t};\r\n\t\treturn { prevProps: props };\r\n\t};\r\n\t\r\n\tcomponentDidMount = () => {\r\n\t\tconst { tasks } = this.props;\r\n\t\tconst itemsFiltered = tasks.items.filter(item => item.category === this.props.category.id);\r\n\t\tthis.setState({ tasks: { items: itemsFiltered } });\r\n\t};\r\n\r\n\tcreateTaskHandler = () => {\r\n\t\tconst { category, createTask } = this.props;\r\n\t\tcreateTask(category.id);\r\n\t};\r\n\t\r\n\tsortTaskHandler = () => {\r\n\t\tconst { sorting, tasks } = this.state;\r\n\t\tconst newSorting = sorting === 0 ? -1 : sorting === -1 ? 1 : -1;\r\n\t\tconst sortedItems = sortItemsByTitle(tasks.items, newSorting);\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\tsorting: newSorting,\r\n\t\t\ttasks: {\r\n\t\t\t\titems: sortedItems\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\t\t\r\n\trender = () => (\r\n\t\t<Category\r\n\t\t\tcategory={this.props.category}\r\n\t\t\tsorting={this.state.sorting}\r\n\t\t\tsortTask={this.sortTaskHandler}\r\n\t\t\tcreateTask={this.createTaskHandler}\r\n\t\t>\r\n\t\t\t<TaskContainer\r\n\t\t\t\ttasks={this.state.tasks}\r\n\t\t\t/>\r\n\t\t</Category>\r\n\t);\r\n};\r\n\r\nexport default connect(\r\n\tstate => ({ tasks: state.tasks, categories: state.categories }),\r\n\t{ \r\n\t\tcreateTask: actions.createTask,\r\n\t\tremoveTask: actions.removeTask,\r\n\t\tupdateTask: actions.updateTask\r\n\t}\r\n)(CategoryContainer);\r\n\r\nCategoryContainer.propTypes = {\r\n\ttasks: PropTypes.object,\r\n\tcategories: PropTypes.object,\r\n\tcreateTaskHandler: PropTypes.func,\r\n\tsortTaskHandler: PropTypes.func,\r\n\tcreateTask: PropTypes.func.isRequired,\r\n\tremoveTask: PropTypes.func.isRequired,\r\n\tupdateTask: PropTypes.func.isRequired\r\n};","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from 'react-redux';\r\nimport CategoryContainer from './CategoryContainer';\r\n\r\nclass App extends React.Component {\r\n\r\n\trender = () => (\r\n\t\r\n\t\t<div className=\"wrapper\">\r\n\t\t\t{this.props.categories.items.map((category, index) => (\r\n\t\t\t\t<CategoryContainer key={ index } category={ category } />\r\n\t\t\t))}\r\n\t\t</div>\r\n\t\t\r\n\t);\r\n\t\r\n};\r\n\r\nexport default connect(\r\n\tstate => ({ categories: state.categories }),\r\n\tnull\r\n)(App);\r\n\r\nApp.propTypes = {\r\n\tcategories: PropTypes.object\r\n};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { tasksConstants } from '../constants';\r\n\r\nconst initialState = {\r\n\titems: [\r\n\t\t{\r\n\t\t\tid: \"0\",\r\n\t\t\ttitle: \"Титл\",\r\n\t\t\tdesc: \"Деск\",\r\n\t\t\tcategory: \"1\"\r\n\t\t}\r\n\t]\r\n};\r\n\r\nexport const tasks = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase tasksConstants.TASK_CREATE:\r\n\t\t\tconst id = state.items.length.toString();\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\titems: [...state.items, {id: id, title: \"\", desc: \"\", category: action.payload}]\r\n\t\t\t};\r\n\t\tcase tasksConstants.TASK_UPDATE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\titems: state.items.map(item => item.id === action.payload.id ? action.payload : item)\r\n\t\t\t};\r\n\t\tcase tasksConstants.TASK_DELETE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\titems: state.items.filter((item, index) => item.id !== action.payload)\r\n\t\t\t};\r\n\t\tcase tasksConstants.TASK_CHANGE_TYPE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\titems: state.items.map(item => item.id === action.payload.task.id ?\r\n\t\t\t\t\t{ ...item, category: action.payload.category.toString() } : \r\n\t\t\t\t\titem\r\n\t\t\t\t) \r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t};\r\n};","const initialState = {\r\n\titems: [\r\n\t\t{\r\n\t\t\tid: \"0\",\r\n\t\t\ttitle: \"To do\",\r\n\t\t\tslug: \"to-do\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: \"1\",\r\n\t\t\ttitle: \"In process\",\r\n\t\t\tslug: \"in-process\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: \"2\",\r\n\t\t\ttitle: \"Done\",\r\n\t\t\tslug: \"done\"\r\n\t\t}\r\n\t]\r\n};\r\n\r\nexport const categories = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t};\r\n};","import { combineReducers } from 'redux';\r\n\r\nimport { tasks } from './tasks';\r\nimport { categories } from './categories';\r\n\r\nconst rootReducer = combineReducers({\r\n\tcategories: categories,\r\n\ttasks: tasks\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport { createLogger } from 'redux-logger';\r\n\r\nimport App from './containers/App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nimport './index.css';\r\n\r\nconst loggerMiddleware = createLogger();\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(\r\n        loggerMiddleware\r\n    )\r\n);\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}